import{createCircle,createCross}from"./utils.js";import"../assets/styles/style.css";let matrixData=[["*","*","*"],["*","*","*"],["*","*","*"]];const storedMatrixData=localStorage.getItem("matrixData"),storedCrossScore=localStorage.getItem("crossScoreData"),storedCircleScore=localStorage.getItem("circleScoreData"),storedDrawScore=localStorage.getItem("drawScoreData");let turn=0,crossScore=0,circleScore=0,drawScore=0;const matrixContainer=document.querySelector(".matrix__container"),newGameButton=document.querySelector(".matrix__button"),winner=document.querySelector(".matrix__winner"),labelOptions=document.querySelectorAll(".matrix__option__item__label"),humanOptions=document.querySelector(".matrix__option__item__human"),aiOptions=document.querySelector(".matrix__option__item__ai"),crossPoint=document.querySelector(".cross__point"),circlePoint=document.querySelector(".circle__point"),drawPoint=document.querySelector(".draw__point"),putMark=(e,t,r)=>{if(turn<9&&humanOptions.checked){let a="0";turn%2==0?(a="x",e.appendChild(createCross()),console.log(turn)):(a="0",e.appendChild(createCircle()),console.log(turn)),matrixData[t][r]=a,localStorage.setItem("matrixData",JSON.stringify(matrixData)),turn+=1,checkWinConditions()}},renderingTurn=e=>{for(let t=0;t<e.length;t++)for(let r=0;r<e.length;r++){let a=document.querySelector('.cell[data-row="'.concat(t,'"][data-col="').concat(r,'"]'));"*"!=e[t][r]&&("0"==e[t][r]?a.appendChild(createCircle()):"x"==e[t][r]&&a.appendChild(createCross()))}},putMarkAI=(e,t,r)=>{if(turn<9&&aiOptions.checked){let a="x";turn%2==0&&(matrixData[t][r]=a,localStorage.setItem("matrixData",JSON.stringify(matrixData)),e.appendChild(createCross()),makeAIMove(a)),turn+=1,checkWinConditions()}},freeСells=()=>{let e=[];for(let t=0;t<matrixData.length;t++)for(let r=0;r<matrixData.length;r++)"*"==matrixData[t][r]&&e.push([t,r]);return e};function makeAIMove(e){const t=freeСells();if(t.length>0){const e=Math.floor(Math.random()*t.length),[r,a]=t[e];let o=document.querySelector('.cell[data-row="'.concat(r,'"][data-col="').concat(a,'"]'));turn+=1,matrixData[r][a]="0",localStorage.setItem("matrixData",JSON.stringify(matrixData)),o.appendChild(createCircle())}}const newGame=()=>{const e=document.querySelectorAll(".cell");for(let e=0;e<matrixData.length;e++)for(let t=0;t<matrixData.length;t++)matrixData[e][t]="*";localStorage.setItem("matrixData",JSON.stringify(matrixData)),e.forEach((e=>{for(;e.firstChild;)e.removeChild(e.firstChild)})),turn=0};function checkWin(e,t){for(let r=0;r<3;r++)if(e[r][0]===t&&e[r][1]===t&&e[r][2]===t||e[0][r]===t&&e[1][r]===t&&e[2][r]===t)return!0;return e[0][0]===t&&e[1][1]===t&&e[2][2]===t||e[0][2]===t&&e[1][1]===t&&e[2][0]===t}const checkWinConditions=()=>{checkWin(matrixData,"x")?(winner.innerText="Крестики победили!",crossScore+=1,localStorage.setItem("crossScoreData",crossScore),crossPoint.innerText=crossScore,turn=9):checkWin(matrixData,"0")?(winner.innerText="Нолики победили!",circleScore+=1,localStorage.setItem("circleScoreData",circleScore),circlePoint.innerText=circleScore,turn=9):(9==turn&&(winner.innerText="Ничья!",drawScore+=1,localStorage.setItem("drawScoreData",drawScore),drawPoint.innerText=drawScore),console.log("Продолжаем игру..."))};for(let e=0;e<matrixData.length;e++)for(let t=0;t<matrixData.length;t++){const r=document.createElement("div");r.className="cell",r.dataset.row=e,r.dataset.col=t,matrixContainer.appendChild(r),r.addEventListener("click",(function(){const e=parseInt(this.dataset.row,10),t=parseInt(this.dataset.col,10);humanOptions.checked?putMark(this,e,t):aiOptions.checked&&putMarkAI(this,e,t)}))}newGameButton.addEventListener("click",(e=>{e.preventDefault(),newGame()})),labelOptions.forEach((e=>{e.addEventListener("click",(()=>{labelOptions.forEach((e=>{e.classList.remove("active")})),e.classList.add("active"),newGame()}))})),storedMatrixData?(matrixData=JSON.parse(storedMatrixData),renderingTurn(matrixData)):matrixData=[["*","*","*"],["*","*","*"],["*","*","*"]];const getStoreScore=(e,t,r)=>(e?(t=Number(e),r.innerText=t):(t=0,r.innerText=t),t);crossScore=getStoreScore(storedCrossScore,crossScore,crossPoint),circleScore=getStoreScore(storedCircleScore,circleScore,circlePoint),drawScore=getStoreScore(storedDrawScore,drawScore,drawPoint);